<?php
// $Id$

class ThisDayInHistoryPermissionsTest extends DrupalTestCase {

  function get_info() {
    return array(
      'name' => t('Node Permission Tests'),
      'desc' => t('Test suite to permissions are properly implemented'),
      'group' => t('This Day in History module'),
    );
  }


  function testCreateNodeWithoutPerm() {
    $test_user = $this->drupalCreateUserRolePerm();
    $this->drupalLoginUser($test_user);
    
    $nodecreatepage = "node/add/thisdayinhistory";
    $html = $this->drupalGet(url($nodecreatepage, NULL, NULL, TRUE));
    $this->assertResponse(403, $nodecreatepage . ' accessed with no permissions');
  }


  function testHistoricalEventCreationCreatePerm() {
    $tdih_nonadmin_perm = array('create historical events'); 
    $tdih_nonadmin_user = $this->drupalCreateUserRolePerm($tdih_nonadmin_perm);
    $this->drupalLoginUser($tdih_nonadmin_user);
    
    $edit = array();
    $edit['title'] = $this->randomName(32);
    $edit['body']  = $this->randomName(32) . ' ' . $this->randomName(32);
    $edit['month'] = '12';
    $edit['year']  = '2005';
    $edit['day']   = '15';
    $isodate = $edit['year'] . '-' . $edit['month'] . '-' . $edit['day'];
    $this->drupalPostRequest('node/add/thisdayinhistory', $edit, 'Submit');
    
    $this->assertWantedRaw(t('Your %post has been created.', array ('%post' => 'Historical event')), 'Page created');
    
    $node = node_load(array('title' => $edit['title']));
    $this->assertNotNull($node, 'Node found in database. %s');
    
    $this->assertEqual($node->year, $edit['year'],
      'Node year field not retrieved as stored, expected ' . $edit['year'] . ', got ' . $node->year);
    $this->assertEqual($node->month, $edit['month'],
      'Node month field not retrieved as stored, expected ' . $edit['month'] . ', got ' . $node->month);
    $this->assertEqual($node->day, $edit['day'],
      'Node day dield not retrieved as stored, expected ' . $edit['day'] . ', got ' . $node->day);
    $this->assertEqual($node->isodate, $isodate,
      'Node isodate field not retrieved as stored, expected ' . $isodate . ', got ' . $node->isodate);
    
  }



}
?>
